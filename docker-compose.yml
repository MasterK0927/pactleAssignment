version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: ./web-ui
      dockerfile: Dockerfile
      target: production
    ports:
      - "3001:3001"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - PORT=3001
    depends_on:
      - pactle-quote-generator
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend service
  pactle-quote-generator:
    build: .
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=info
      # Database host/port for container network
      - DB_HOST=db
      - DB_PORT=5432
    volumes:
      - ./data:/app/data:ro
      - ./samples:/app/samples:ro
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


  db:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pactle_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pactle_db"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

volumes:
  pgdata:
